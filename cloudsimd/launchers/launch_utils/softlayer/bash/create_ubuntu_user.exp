#!/usr/bin/expect -f


set ip_address [lindex $argv 0] 
set pass [lindex $argv 1]

#
# This Expect script was generated by autoexpect on Mon Apr  8 17:29:57 2013
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 1  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@$ip_address
match_max 100000
expect -exact "root@$ip_address's password: "
send -- "$pass\r"
expect -exact "\r
Welcome to Ubuntu"

#send -- "useradd -m -s /bin/bash ubuntu; adduser ubuntu sudo; echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers; mkdir /home/ubuntu/.ssh; chmod 0700 /home/ubuntu/.ssh;chown ubuntu:ubuntu /home/ubuntu/.ssh\r"
#expect -exact "\r"

sleep .1
send -- "useradd -m -s /bin/bash ubuntu\r"
expect -exact "\r"

send -- "adduser ubuntu sudo\r"
expect -exact "\r"

send -- "echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\r"
expect -exact "\r"

send -- "mkdir /home/ubuntu/.ssh\r"
expect -exact "\r"

send -- "chmod 0700 /home/ubuntu/.ssh\r"
expect -exact "\r"

send -- "chown ubuntu:ubuntu /home/ubuntu/.ssh\r"
expect -exact "\r"
